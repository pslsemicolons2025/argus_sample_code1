name: Vulnerability Scan

on:
  push:
    branches:
      - main

permissions:
  security-events: write
  actions: read
  contents: read

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get install -y curl jq
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      - name: Run Trivy Scan with Categories
        run: |
          mkdir -p reports
          trivy fs --scanners vuln,misconfig,secret,license \
            --security-checks vuln,misconfig,secret,license \
            --vuln-type library \
            --format json --output reports/trivy-report.json .
      
      - name: Run Python Script to Filter Trivy Report
        run: |
          python3 scripts/filter_trivy_scan.py reports/trivy-report.json pom.xml >> reports/filtered-trivy-report.json

      - name: Convert Trivy JSON to SARIF
        run: |
          trivy convert --format sarif reports/trivy-report.json > reports/trivy-report.sarif

      - name: Upload SARIF to GitHub Security Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/trivy-report.sarif
          
      - name: Save Trivy JSON Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-json-report
          path: reports/trivy-report.json
          
      - name: Save Filtered Trivy JSON Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-json-report-filtered
          path: reports/filtered-trivy-report.json
      
      - name: Send Scan Report to API
        run: |
          response_code=$(curl -X POST http://54.174.73.151:8000/v1/addScan/ \
            -H "Content-Type: application/json" \
            -d @reports/filtered-trivy-report.json
            )
          echo "API Response Code: $response_code"

          sleep 20
          scan_id=$(echo $GITHUB_SHA | cut -c 1-7)

          echo $scan_id
          response_code=$(curl -X GET http://54.174.73.151:8000/v1/getllmfix/?scan_id=$scan_id)

      - name: Run Python Script to update remdiated pom.xml 
        run: |
          export MY_TOKEN="${{ secrets.MY_TOKEN }}"
          python3 scripts/update_pom_xml.py pom.xml
        env:
          MY_TOKEN : ${{ secrets.MY_TOKEN }}
